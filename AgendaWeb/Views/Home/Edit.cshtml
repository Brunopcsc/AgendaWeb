@model AgendaWeb.Models.Contato

@{
    ViewBag.Title = "Editar";
}

<h1>Editar</h1>

<h4>Contato</h4>
<hr />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col-md-4">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.contato_id)
            <div class="form-group">
                <label asp-for="nome" class="control-label">Nome*</label>
                @Html.EditorFor(model => model.nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nome, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">

                <label asp-for="telefone" class="control-label">Telefone*</label>
                @Html.EditorFor(model => model.telefone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.telefone, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.celular, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.celular, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.celular, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.endereco, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.endereco, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.endereco, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.bairro, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.bairro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.bairro, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.cidade, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.cidade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cidade, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.estado, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.estado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.cep, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.cep, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.cep, "", new { @class = "text-danger" })

            </div>

            <label class="control-label" style="font-size:11px">Campos com * são obrigatórios.</label>
            <div class="form-group">
                <input type="submit" value="Salvar" class="btn btn-primary" />
            </div>

        </div>
    </div>
}

<div>
    @Html.ActionLink("Voltar à lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
